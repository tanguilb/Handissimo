# Learn more about services, parameters and containers at
# http://symfony.com/doc/current/book/service_container.html
parameters:
#    parameter_name: value

services:
    admin.organizations:
        class: HandissimoBundle\Admin\OrganizationsAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: Organismes, label: Description de la structure }
        arguments:
            - null
            - HandissimoBundle\Entity\Organizations
            - HandissimoBundle:OrganizationsAdmin
        calls:
            - [ setTemplate, [list, HandissimoBundle:OrganizationsAdmin:list.html.twig]]


    admin.disabilitytypes:
        class: HandissimoBundle\Admin\DisabilityTypesAdmin
        arguments: [~, HandissimoBundle\Entity\DisabilityTypes, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Dossier, label: Types de handicaps }

    admin.society:
        class: HandissimoBundle\Admin\SocietyAdmin
        arguments: [~, HandissimoBundle\Entity\Society, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Organismes, label: Gestionnaire }

    admin.structures_types:
        class: HandissimoBundle\Admin\StructuresTypesAdmin
        arguments: [~, HandissimoBundle\Entity\StructuresTypes, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Dossier, label: Type de structures }

    admin.staff:
        class: HandissimoBundle\Admin\StaffAdmin
        arguments: [~, HandissimoBundle\Entity\Staff, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Personnel, label: MÃ©tiers }

    admin.stafftype:
        class: HandissimoBundle\Admin\StaffTypesAdmin
        arguments: [~, HandissimoBundle\Entity\StaffTypes, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Personnel, label: Type de personnels }

    admin.needs:
        class: HandissimoBundle\Admin\NeedsAdmin
        arguments: [~, HandissimoBundle\Entity\Needs, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Dossier, label: Type de services }

    admin.opinion:
        class: HandissimoBundle\Admin\OpinionAdmin
        arguments: [~, HandissimoBundle\Entity\Opinion, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Opinions sur le site, label: Opinions }

    user.form.register.type:
        class: Application\Sonata\UserBundle\Form\Type\RegisterType
        parent: fos_user.registration.form.type
        tags:
            - { name: form.type, alias: front_user_registration }
