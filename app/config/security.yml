# To get started with security, check out the documentation:
# http://symfony.com/doc/current/book/security.html
security:

    encoders:
        #FOS\UserBundle\Model\UserInterface: bcrypt
        FOS\UserBundle\Model\UserInterface: sha512




    providers:
        fos_userbundle:
            id: fos_user.user_manager
        in_memory:
            memory: ~
        fos_userbundle:
            id: fos_user.user_provider.username_email

    firewalls:
        # disables authentication for assets and the profiler, adapt it according to your needs
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        admin:
            pattern:            /admin(.*)
            context:            user
            form_login:
                provider:       fos_userbundle
                login_path:     /admin/login
                use_forward:    false
                check_path:     /admin/login_check
                failure_path:   null
            logout:
                path:           /admin/logout
                target:         /admin/login
            anonymous:          true

        main:
            pattern:             .*
            context:             user
            form_login:
                provider:       fos_userbundle
                csrf_token_generator: security.csrf.token_manager
                login_path:     /login
                use_forward:    false
                check_path:     /login_check
                failure_path:   null
            logout:             true
            anonymous:          true

    access_control:
        # URL of FOSUserBundle which need to be available to anonymous users
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }

        # Admin login page needs to be accessed without credential
        - { path: ^/admin/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/logout$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/login_check$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }

        # Secured part of the site
        # This config requires being logged for the whole site and having the admin role for the admin part.
        # Change these rules to adapt them to your needs
        - { path: ^/admin/, role: [ROLE_SONATA_ADMIN, ROLE_ADMIN] }
        - { path: ^/admin/, role: [ROLE_SONATA_ADMIN, ROLE_ADMIN] }
        - { path: ^/society/, role: [ROLE_SOC, ROLE_SONATA_ADMIN] }
        - { path: ^/.*, role: IS_AUTHENTICATED_ANONYMOUSLY }

    role_hierarchy:



        ROLE_ORGANIZATION:
            - ROLE_USER
            - ROLE_ADMIN_ORGANIZATIONS_ALL
            - ROLE_SONATA_ADMIN


        ROLE_SOCIETY:
            - ROLE_USER
            - ROLE_ADMIN_SOCIETY_ALL
            - ROLE_ADMIN_ORGANIZATIONS_ALL
            - ROLE_SONATA_ADMIN

        ROLE_MANAGER:
            - ROLE_EDITOR

        ROLE_SOC:         [ROLE_SOCIETY, ROLE_ORG]
        ROLE_ORG:         [ROLE_ORGANIZATION]
        ROLE_ADMIN:       [ROLE_USER, ROLE_SONATA_ADMIN, ROLE_EDITOR]
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    acl:
        connection: default

    access_decision_manager:

        # strategy value can be: affirmative, unanimous or consensus
        strategy: unanimous